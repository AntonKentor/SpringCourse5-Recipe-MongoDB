# Set names of properties
recipe.description=Description (default)


#In order to create custom errormessage, you have to add som validation on the displaying object,
#In this case it is RecipeCommand.java.
#Some attributes of RecipeCommand has for example @Min(1) and @Max(999).

#In RecipeController and method saveOrUpdateRecipe we have added @Valid, 'recipe' to ModelAttribute and BindingResult.
#To create custom error message for specific inputfield in the form, debug and check the bindingresult-object.
# bindingresult -> errors -> select on object -> codes.
#Usually, it is the first string at index 0 in codes that you later will put in messages.properties. see below.


#Validaiton Messages
#Order of precedence
# 1 code.objectName.fieldName
# 2 code.fieldName
# 3 code.fieldType (Java data type)
# 4 code

NotBlank.recipe.description=Description Cannot Be Blank
Size.recipe.description={0} must be between {2} and {1} characters long.
Max.recipe.cookTime={0} must be less than {1}
URL.recipe.url=Please provide a valid URL
typeMismatch.recipe.prepTime=Must be a valid integer.
typeMismatch.recipe.cookTime=Must be a valid integer.
typeMismatch.recipe.servings=Must be a valid integer.